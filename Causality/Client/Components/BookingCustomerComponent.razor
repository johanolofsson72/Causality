@page "/customer/{Id:int}"

<div class="irx-tabcontainer">
    <div style="width: 100%; display: flex; justify-content: center;">
        <a href="/bookingcustomers" style="text-decoration: none;"><input type="button" class="k-button telerik-blazor" value="Back to Customers" /></a>
    </div>
        <TelerikTabStrip TabPosition="TabPosition.Top" @ref="myTabStrip">
            <TabStripTab Title="@(IsMedium ? "Personal info" : (IsSmall ? "Personal" : "Personal information"))">
                <BookingCustomerPersonalComponent NotifyParent="Notify" BookingCustomerId="@Id" />
            </TabStripTab>
            <TabStripTab Title="@(IsMedium ? "Boats" : (IsSmall ? "Boats" : "Boats"))">
                <BookingCustomerBoatsComponent NotifyParent="Notify" BookingCustomerId="@Id" />
            </TabStripTab>
            <TabStripTab Title="@(IsMedium ? "Moorings" : (IsSmall ? "Moorings" : "Moorings"))">
                <BookingCustomerMooringsComponent NotifyParent="Notify" BookingCustomerId="@Id" />
            </TabStripTab>
            <TabStripTab Title="@(IsMedium ? "Queues" : (IsSmall ? "Queues" : "Queues"))">
                <BookingCustomerQueuesComponent NotifyParent="Notify" BookingCustomerId="@Id" />
            </TabStripTab>
        </TelerikTabStrip>

        <MediaQuery Media="@Breakpoints.OnlyMedium" @bind-Matches="IsMedium" />
        <MediaQuery Media="@Breakpoints.SmallDown" @bind-Matches="IsSmall" />

        <div class="notification-parent">
            <TelerikNotification @ref="NotificationComponent"
                                 Class="demo-notification"
                                 HorizontalPosition="@NotificationHorizontalPosition.Right"
                                 VerticalPosition="@NotificationVerticalPosition.Bottom">
            </TelerikNotification>
        </div>
    </div>

    @code
{
        protected TelerikNotification NotificationComponent { get; set; }

        public async void Notify(Dictionary<string, string> parameters)
        {
            await Task.Delay(0);
            NotificationComponent.Show(new NotificationModel
            {
                Text = parameters["text"],
                ThemeColor = parameters["theme"],
                CloseAfter = 5000
            });
        }

        protected bool IsMedium = false;
        protected bool IsSmall = false;

        TelerikTabStrip myTabStrip;

        [Parameter]
        public int Id { get; set; }
    }
