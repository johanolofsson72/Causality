@inherits BookingQueuesViewModel

<style>
    .k-window .k-edit-form-container {
        max-height: 80vh;
        overflow: auto;
        overflow-x: hidden;
    }
</style>

<div class="irx-container">
    <h5>@Title</h5>

    @if (selectedItem != null)
    {
        <hr />
        <div class="mb-sm">
            <label class="k-label" for="customer">
                Please select a customer<br />
            </label>
            <TelerikDropDownList Id="customer" Value="@selectedItem.CustomerName" Data="@BookingCustomerData"
                                 PopupHeight="auto" Width="100%"
                                 ValueChanged="@( (string c) => CustomerSelected(c) )">
                <ItemTemplate>
                    @{
                        var customer = (context as String).ToString();
                        if (customer.Contains("("))
                        {
                            customer = customer.Substring(0, customer.IndexOf("("));
                        }

                        @customer

                    }
                </ItemTemplate>
                <ValueTemplate>
                    @{
                            var customer = (context as String).ToString();
                            if (customer.Contains("("))
                            {
                                customer = customer.Substring(0, customer.IndexOf("("));
                            }

                        @customer

                    }
                </ValueTemplate>
            </TelerikDropDownList>
        </div>
        <div class="mb-sm">
            <label class="k-label" for="boat">
                Then select a boat<br />
            </label>
            <TelerikDropDownList Id="boat" Value="@selectedItem.BoatName" Data="@BookingBoatData"
                                 PopupHeight="auto" Width="100%"
                                 Enabled="@(!string.IsNullOrWhiteSpace(selectedItem.CustomerName))"
                                 ValueChanged="@( (string c) => BoatSelected(c) )">
                <ItemTemplate>
                    @{
                        var boat = (context as String).ToString();
                        if (boat.Contains("("))
                        {
                            boat = boat.Substring(0, boat.IndexOf("("));
                        }

                        @boat

                    }
                </ItemTemplate>
                <ValueTemplate>
                    @{
                        var boat = (context as String).ToString();
                        if (boat.Contains("("))
                        {
                            boat = boat.Substring(0, boat.IndexOf("("));
                        }

                        @boat

                    }
                </ValueTemplate>
            </TelerikDropDownList>
        </div>
        <div class="mb-sm">
            <label class="k-label" for="comment">
                Type a comment or wish<br />
            </label>
            <input class="k-textbox" @bind="@selectedItem.Comment" id="comment" name="name" type="text" />
        </div>
        <div class="mb-sm">
            <div>
                <TelerikButton Icon="save" Class="k-primary mr-sm" OnClick="@Save" Enabled="@(!string.IsNullOrWhiteSpace(selectedItem.BoatName))">Save</TelerikButton>
                <TelerikButton Icon="cancel" Class="k-primary mr-sm" OnClick="@Cancel">Cancel</TelerikButton>
            </div>
        </div>
    }


    <TelerikGrid Data=@list
                 EditMode="@GridEditMode.Popup"
                 Sortable="true"
                 OnDelete="@DeleteHandler"
                 OnUpdate="@UpdateHandler">
        <GridToolBar>
            <div style="display: flex; justify-content: center;">
                <GridCommandButton OnClick="@((args)=> OnSelectedItem(args.Item as BookingQueueItem))" Enabled="@CustomerDropDownLoaded" Icon="add">Add Queue Item</GridCommandButton>
            </div>
        </GridToolBar>
        <GridColumns>

            @if (IsMedium)
            {
                <GridColumn Field=@nameof(BookingQueueItem.CustomerName) Title="Customer" Editable="false">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatName) Title="Boat" Editable="false">
                    <Template>
                        @{
                            var boat = (context as BookingQueueItem).BoatName.ToString();
                            if (boat.Contains("("))
                            {
                                boat = boat.Substring(0, boat.IndexOf("("));
                            }

                            @boat

                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatLength) Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatWidth) Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatDepth) Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.QueuedDate) Editable="false">
                    <Template>
                        @((context as BookingQueueItem).QueuedDate.ToString("yyyy-MM-dd"))
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.Comment)>
                </GridColumn>
                <GridCommandColumn>
                    <div style="display: flex; flex-direction: row;">
                        <GridCommandButton Command="Edit" Icon="edit">E</GridCommandButton>
                        <div>&nbsp;</div>
                        <GridCommandButton Command="Delete" Icon="delete">D</GridCommandButton>
                    </div>
                </GridCommandColumn>

            }
            else if (IsSmall)
            {
                <GridColumn Field=@nameof(BookingQueueItem.CustomerName) Title="Customer" Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatName) Title="Boat" Editable="false">
                    <Template>
                        @{
                            var boat = (context as BookingQueueItem).BoatName.ToString();
                            if (boat.Contains("("))
                            {
                                boat = boat.Substring(0, boat.IndexOf("("));
                            }

                            @boat

                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatLength) Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatWidth) Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatDepth) Editable="false" Width="0.01%">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.QueuedDate) Editable="false">
                    <Template>
                        @((context as BookingQueueItem).QueuedDate.ToString("yyyy-MM-dd"))
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.Comment) Width="0.01%">
                </GridColumn>
                <GridCommandColumn>
                    <div style="display: flex; flex-direction: row;">
                        <GridCommandButton Command="Edit" Icon="edit"></GridCommandButton>
                        <div>&nbsp;</div>
                        <GridCommandButton Command="Delete" Icon="delete"></GridCommandButton>
                    </div>
                </GridCommandColumn>

            }
            else
            {
                <GridColumn Field=@nameof(BookingQueueItem.CustomerName) Title="Customer" Editable="false">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatName) Title="Boat" Editable="false">
                    <Template>
                        @{
                            var boat = (context as BookingQueueItem).BoatName.ToString();
                            if (boat.Contains("("))
                            {
                                boat = boat.Substring(0, boat.IndexOf("("));
                            }

                            @boat

                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatLength) Editable="false">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatWidth) Editable="false">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.BoatDepth) Editable="false">
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.QueuedDate) Editable="false">
                    <Template>
                        @((context as BookingQueueItem).QueuedDate.ToString("yyyy-MM-dd"))
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(BookingQueueItem.Comment)>
                </GridColumn>
                <GridCommandColumn Width="185px">
                    <div style="display: flex; flex-direction: row;">
                        <GridCommandButton Command="Edit" Icon="edit">Edit</GridCommandButton>
                        <div>&nbsp;</div>
                        <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>
                    </div>
                </GridCommandColumn>
            }

        </GridColumns>
    </TelerikGrid>

    <MediaQuery Media="@Breakpoints.OnlyMedium" @bind-Matches="IsMedium" />
    <MediaQuery Media="@Breakpoints.SmallDown" @bind-Matches="IsSmall" />
</div>
